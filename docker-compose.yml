
services:
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.33.1
    ports: 
      - "8080:8080"
      - "50051:50051"
    container_name: weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: "25"
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "none"   # we push external vectors
      ENABLE_MODULES: "bm25"             # hybrid: BM25 + vector
      CLUSTER_HOSTNAME: "node1"
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 60s

  ingestion:
    build:
      context: .
      dockerfile: services/ingestion/Dockerfile
    container_name: ingestion
    volumes:
      - ./data:/app/data
    depends_on:
      weaviate:
        condition: service_started
    ports: ["8081:8081"]

  embedding:
    build:
      context: .
      dockerfile: services/embedding/Dockerfile
    container_name: embedding
    environment:
      WEAVIATE_URL: "http://weaviate:8080"
    volumes:
      - ./data:/app/data
      - hf_cache:/hf-cache     # NEW
    depends_on:
      weaviate:
        condition: service_started
    ports: ["8082:8082"]

  search:
    build:
      context: .
      dockerfile: services/search/Dockerfile
    container_name: search
    environment:
      WEAVIATE_URL: "http://weaviate:8080"
      LLM_PROVIDER: "none"
    volumes:
      - hf_cache:/hf-cache     # NEW
    depends_on:
      weaviate:
        condition: service_started
    ports: ["8083:8083"]


  
  frontend:
    build:
      context: .
      dockerfile: services/frontend/Dockerfile
    container_name: frontend
    environment:
      # This must be reachable from the user's browser
      API_BASE: "http://localhost:8083"
    depends_on:
      search:
        condition: service_started
    ports: ["8084:8084"]
  

volumes:
  weaviate_data:
  hf_cache:           # NEW